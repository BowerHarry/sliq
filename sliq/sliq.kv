#:import utils kivy.utils

<BoardTile>:
    size: 100, 100


<TileEdge>:

<BorderEdge>:
    angle: 0
    size_hint_x: None
    size_hint_y: None
    canvas.before:
        PushMatrix
        Rotate:
            angle: self.angle
            axis: 0,0,1
            origin: (root.width * 0.5 + 450,root.height * 0.5 + 450)
    canvas.after:
        PopMatrix

<Board>:
    border: border
    size_hint_x: None
    size_hint_y: None
    Border:
        id: border
        center_x: (root.width * 0.5)
        center_y: (root.height * 0.5)

<Border>:
    a: A
    a0:A0
    b: B
    b0:B0
    c: C
    c0:C0
    d: D
    d0:D0
    size_hint_x: None
    size_hint_y: None
    BorderEdge:
        id: A
        center_x: (root.width * 0.5)
        center_y: (root.height * 0.5)
    BorderEdge:
        id: A0
        center_x: (root.width * 0.5) - 800
        center_y: (root.height * 0.5)
    BorderEdge:
        id: B
        center_x: (root.width * 0.5)
        center_y: (root.height * 0.5)
    BorderEdge:
        id: B0
        center_x: (root.width * 0.5)
        center_y: (root.height * 0.5) +800
    BorderEdge:
        id: C
        center_x: (root.width * 0.5)
        center_y: (root.height * 0.5)
    BorderEdge:
        id: C0
        center_x: (root.width * 0.5) + 800
        center_y: (root.height * 0.5)
    BorderEdge:
        id: D
        center_x: (root.width * 0.5)
        center_y: (root.height * 0.5)
    BorderEdge:
        id: D0
        center_x: (root.width * 0.5)
        center_y: (root.height * 0.5) - 800

<BorderVerticalCover>
    size_hint_x: None
    size_hint_y: None
    canvas:
        Color:
            rgb: utils.get_color_from_hex('#F5F5F5')
        Rectangle:
            pos: self.center_x, self.center_y
            size: 20, 800

<BorderHorizontalCover>
    size_hint_x: None
    size_hint_y: None
    canvas:
        Color:
            rgb: utils.get_color_from_hex('#F5F5F5')
        Rectangle:
            pos: self.center_x, self.center_y
            size: 800, 20

<SliqGameController>:
    playagainButton: playagainButton

    Button:
        id: playagainButton
        color: (1 , 1 , 1 , 1)
        background_color: (0 , 1 , 0 , 1)
        font_size: 70  
        center_x: (root.width * 0.475)
        top: root.height - (0.73 * root.height)
        text: 'Play again'
        on_press: root.playAgain()
        size_hint: (.1, .05)
        visible: root.gameEnd
        opacity: 1 if self.visible else 0
        disabled: not self.visible

<SliqGame>:
    board: board
    score: score
    highscore: highscore
    rotateButton: rotateButton
    teddy: teddy
    
    Board:
        id: board
        center_x: (root.width / 2) -450
        center_y: (root.height / 2) -250
        visible: not root.endGameVisible
        opacity: 1 if self.visible else 0
        
    BorderVerticalCover:
        center_x: (root.width * 0.5) - 405
        center_y: (root.height * 0.5) - 1003
    BorderVerticalCover:
        center_x: (root.width * 0.5) - 405
        center_y: (root.height * 0.5) + 603
    BorderVerticalCover:
        center_x: (root.width * 0.5) + 395
        center_y: (root.height * 0.5) + 603
    BorderVerticalCover:
        center_x: (root.width * 0.5) + 395
        center_y: (root.height * 0.5) - 1003
    BorderHorizontalCover:
        center_x: (root.width * 0.5) + 403
        center_y: (root.height * 0.5) + 593
    BorderHorizontalCover:
        center_x: (root.width * 0.5) + 403
        center_y: (root.height * 0.5) - 205
    BorderHorizontalCover:
        center_x: (root.width * 0.5) - 1203
        center_y: (root.height * 0.5) - 205
    BorderHorizontalCover:
        center_x: (root.width * 0.5) - 1203
        center_y: (root.height * 0.5) + 597

    Label:
        color: utils.get_color_from_hex('#4b4b4b')
        font_size: 30  
        id: score
        points: board.score
        center_x: (root.width * 0.4)
        center_y: (root.height * 0.9)
        # size: 250, 70
        text: "Score: " + str(self.points)
        visible: not root.endGameVisible
        opacity: 1 if self.visible else 0
        size_hint_x: None
        size_hint_y: None
        size: 250, 70
        disabled: root.endGameVisible

    Label:
        color: utils.get_color_from_hex('#4b4b4b')
        font_size: 30  
        id: highscore
        score: self.score
        center_x: (root.width * 0.57)
        center_y: (root.height * 0.9)
        # size: 250, 70
        text: "Highscore: " + str(self.score)
        visible: not root.endGameVisible
        opacity: 1 if self.visible else 0
        size_hint_x: None
        size_hint_y: None
        size: 250,70
        disabled: root.endGameVisible


    Image:
        source: 'src/pipes.png'
        # size: 800, 800
        center_x: (root.width * 0.5) + 13
        center_y: (root.height * 0.5) - 460
        keep_ratio: True
        size_hint_x: None
        size_hint_y: None
        size: 800, 800
        visible: not root.endGameVisible
        opacity: 1 if self.visible else 0

    Image:
        id: teddy
        source: 'src/teddy.png'
        # size: 200, 200
        center_x: (root.width * 0.5) - 370
        center_y: (root.height * 0.5) - 670
        keep_ratio: True
        visible: not root.endGameVisible
        size_hint_x: None
        size_hint_y: None
        size: 200,200
        # size_hint_x: 1 if self.visible else 0
        opacity: 1 if self.visible else 0

        

    Button:
        # source: 'src/lever.png'
        id: rotateButton
        # size: 150, 150
        center_x: (root.width * 0.5) + 480
        center_y: (root.height * 0.5) + 300
        keep_ratio: True
        background_normal: 'src/lever.png'
        background_down: 'src/lever_flip.png'
        background_disabled_normal: 'src/lever_flip.png'
        background_disabled_down: 'src/lever_flip.png'
        on_press: root.rotateBorder()
        visible: not root.endGameVisible
        opacity: 1 if self.visible else 0
        size_hint_x: None
        size_hint_y: None
        size: 150,150
        disabled: root.endGameVisible
    
    # Image:
    #     source: 'src/endgame.png'
    #     size: 2000, 2000
    #     center_x: (root.width * 0.5) - 8
    #     center_y: (root.height * 0.5)
    #     keep_ratio: True
    #     visible: root.gameWon
    #     size_hint_x: 1 if self.visible else 0
    #     opacity: 1 if self.visible else 0

    Image:
        source: 'src/body.png'
        # size: 2000, 2000
        center_x: (root.width * 0.5)
        center_y: (root.height * 0.5) - 500
        keep_ratio: True
        visible: root.gameWon
        size_hint_x: None
        size_hint_y: None
        size: 2000, 2000
        opacity: 1 if self.visible else 0

    Image:
        source: 'src/teddy-alive.png'
        size: 2000, 2000
        center_x: (root.width * 0.5)
        center_y: (root.height * 0.5) - 500
        keep_ratio: True
        visible: root.gameLost
        size_hint_x: None
        size_hint_y: None
        opacity: 1 if self.visible else 0

    Image:
        source: 'src/filled-head.png'
        size: 200, 200
        center_x: (root.width * 0.5) - 100
        center_y: (root.height * 0.5)
        keep_ratio: True
        visible: root.endGameVisible & (root.stars >=1)
        size_hint_x: None
        size_hint_y: None
        opacity: 1 if self.visible else 0
    
    Image:
        source: 'src/empty-head.png'
        size: 200, 200
        center_x: (root.width * 0.5) - 100
        center_y: (root.height * 0.5)
        keep_ratio: True
        visible: root.endGameVisible & (root.stars <1)
        size_hint_x: None
        size_hint_y: None
        opacity: 1 if self.visible else 0

    Image:
        source: 'src/filled-head.png'
        size: 200, 200
        center_x: (root.width * 0.5)
        center_y: (root.height * 0.5)
        keep_ratio: True
        visible: root.endGameVisible & (root.stars >=2)
        size_hint_x: None
        size_hint_y: None
        opacity: 1 if self.visible else 0
    
    Image:
        source: 'src/empty-head.png'
        size: 200, 200
        center_x: (root.width * 0.5)
        center_y: (root.height * 0.5)
        keep_ratio: True
        visible: root.endGameVisible & (root.stars < 2)
        size_hint_x: None
        size_hint_y: None
        opacity: 1 if self.visible else 0

    Image:
        source: 'src/filled-head.png'
        size: 200, 200
        center_x: (root.width * 0.5) + 100
        center_y: (root.height * 0.5)
        keep_ratio: True
        visible: root.endGameVisible & (root.stars == 3)
        size_hint_x: None
        size_hint_y: None
        opacity: 1 if self.visible else 0

    Image:
        source: 'src/empty-head.png'
        size: 200, 200
        center_x: (root.width * 0.5) + 100
        center_y: (root.height * 0.5)
        keep_ratio: True
        visible: root.endGameVisible & (root.stars != 3)
        size_hint_x: None
        size_hint_y: None
        opacity: 1 if self.visible else 0
